// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Academia.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    partial class BancoDeDadosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Execucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ExercicioTreinoId")
                        .HasColumnType("int");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.Property<int?>("TreinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioTreinoId");

                    b.HasIndex("TreinoId");

                    b.ToTable("Execucoes");
                });

            modelBuilder.Entity("Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Dificuldade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("ExercicioTreino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<int?>("Repeticoes")
                        .HasColumnType("int");

                    b.Property<int?>("Series")
                        .HasColumnType("int");

                    b.Property<int?>("TreinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("TreinoId");

                    b.ToTable("ExerciciosTreinos");
                });

            modelBuilder.Entity("Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Turno")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("Execucao", b =>
                {
                    b.HasOne("ExercicioTreino", "ExercicioTreino")
                        .WithMany()
                        .HasForeignKey("ExercicioTreinoId");

                    b.HasOne("Treino", "Treino")
                        .WithMany()
                        .HasForeignKey("TreinoId");

                    b.Navigation("ExercicioTreino");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("ExercicioTreino", b =>
                {
                    b.HasOne("Exercicio", "Exercicio")
                        .WithMany()
                        .HasForeignKey("ExercicioId");

                    b.HasOne("Treino", null)
                        .WithMany("ExercicioTreino")
                        .HasForeignKey("TreinoId");

                    b.Navigation("Exercicio");
                });

            modelBuilder.Entity("Treino", b =>
                {
                    b.HasOne("Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId");

                    b.HasOne("Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Treino", b =>
                {
                    b.Navigation("ExercicioTreino");
                });
#pragma warning restore 612, 618
        }
    }
}
